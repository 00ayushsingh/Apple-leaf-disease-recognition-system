# -*- coding: utf-8 -*-
"""G3MINOR4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1930y2iUB91WwQKR2XBaueW6bhjnYrgvX
"""

from PIL import Image
import os

def rotate_clockwise(input_image):
    new_image = input_image.transpose(Image.ROTATE_270)
    return new_image

def rotate_counter_clockwise(input_image):
    new_image = input_image.transpose(Image.ROTATE_90)
    return new_image

def rotate_upside_down(input_image):
    new_image = input_image.transpose(Image.ROTATE_180)
    return new_image

def main():
    # Define the directory containing your original images
    original_images_dir = '/content/drive/MyDrive/appledata/rust'

    # Define the directory where augmented images will be saved
    augmented_images_dir = '/content/drive/MyDrive/appledata_augumented/rust'

    # Create the augmented images directory if it doesn't exist
    if not os.path.exists(augmented_images_dir):
        os.makedirs(augmented_images_dir)

    # Iterate over each image in the original directory
    for filename in os.listdir(original_images_dir):
        try:
            # Load the input image
            input_image = Image.open(os.path.join(original_images_dir, filename))

            # Perform clockwise rotation
            cw_rotated_image = rotate_clockwise(input_image)
            cw_rotated_image.save(os.path.join(augmented_images_dir, 'CW_' + filename))

            # Perform counter-clockwise rotation
            ccw_rotated_image = rotate_counter_clockwise(input_image)
            ccw_rotated_image.save(os.path.join(augmented_images_dir, 'CCW_' + filename))

            # Perform upside-down rotation
            ud_rotated_image = rotate_upside_down(input_image)
            ud_rotated_image.save(os.path.join(augmented_images_dir, 'UD_' + filename))

        except Exception as e:
            print(f"Error processing image {filename}: {e}")

    print("Image augmentation complete.")

if __name__ == '__main__':
    main()

def main():
    # Define the directory containing your original images
    original_images_dir = '/content/drive/MyDrive/appledata/scab'

    # Define the directory where augmented images will be saved
    augmented_images_dir = '/content/drive/MyDrive/appledata_augumented/scab'

    # Create the augmented images directory if it doesn't exist
    if not os.path.exists(augmented_images_dir):
        os.makedirs(augmented_images_dir)

    # Iterate over each image in the original directory
    for filename in os.listdir(original_images_dir):
        try:
            # Load the input image
            input_image = Image.open(os.path.join(original_images_dir, filename))

            # Perform clockwise rotation
            cw_rotated_image = rotate_clockwise(input_image)
            cw_rotated_image.save(os.path.join(augmented_images_dir, 'CW_' + filename))

            # Perform counter-clockwise rotation
            ccw_rotated_image = rotate_counter_clockwise(input_image)
            ccw_rotated_image.save(os.path.join(augmented_images_dir, 'CCW_' + filename))

            # Perform upside-down rotation
            ud_rotated_image = rotate_upside_down(input_image)
            ud_rotated_image.save(os.path.join(augmented_images_dir, 'UD_' + filename))

        except Exception as e:
            print(f"Error processing image {filename}: {e}")

    print("Image augmentation complete.")

if __name__ == '__main__':
    main()

def main():
    # Define the directory containing your original images
    original_images_dir = '/content/drive/MyDrive/appledata/healthy'

    # Define the directory where augmented images will be saved
    augmented_images_dir = '/content/drive/MyDrive/appledata_augumented/healthy'

    # Create the augmented images directory if it doesn't exist
    if not os.path.exists(augmented_images_dir):
        os.makedirs(augmented_images_dir)

    # Iterate over each image in the original directory
    for filename in os.listdir(original_images_dir):
        try:
            # Load the input image
            input_image = Image.open(os.path.join(original_images_dir, filename))

            # Perform clockwise rotation
            cw_rotated_image = rotate_clockwise(input_image)
            cw_rotated_image.save(os.path.join(augmented_images_dir, 'CW_' + filename))

            # Perform counter-clockwise rotation
            ccw_rotated_image = rotate_counter_clockwise(input_image)
            ccw_rotated_image.save(os.path.join(augmented_images_dir, 'CCW_' + filename))

            # Perform upside-down rotation
            ud_rotated_image = rotate_upside_down(input_image)
            ud_rotated_image.save(os.path.join(augmented_images_dir, 'UD_' + filename))

        except Exception as e:
            print(f"Error processing image {filename}: {e}")

    print("Image augmentation complete.")

if __name__ == '__main__':
    main()